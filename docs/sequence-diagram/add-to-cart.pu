@startuml

' General configuration
skinparam defaultFontSize 20
' skinparam maxMessageSize 100
skinparam sequenceMessageAlign center

' Actor style configuration
skinparam actorStyle awesome

' Arrow and border thickness configuration
skinparam {
    ArrowThickness 2
    ParticipantBorderThickness 2
    ActorBorderThickness 2
    LifeLineBorderThickness 2
    ActivationBorderThickness 2
}

' Life line color configuration
skinparam LifeLineBorderColor black

' Font style configuration for components
skinparam {
    actorFontStyle bold
    boundaryFontStyle bold
    controlFontStyle bold
    entityFontStyle bold
    databaseFontStyle bold
}

' Define components
actor "Actor" as actor
boundary "ProductDetailPage" as detailPage
database "LocalStorage" as localStorage

' Start processing flow
activate actor
actor -> detailPage: selectVariant(size, color)
activate detailPage
actor -> detailPage: inputQuantity(quantity)

alt product in stock
    actor -> detailPage: clickAddToCart()
    detailPage -> localStorage: getCart()
    activate localStorage
    localStorage --> detailPage: return(cartItems)
    
    alt product exists in cart
        detailPage -> localStorage: updateCart(id, quantity)
        localStorage --> detailPage: return()
        detailPage --> actor: display("Updated quantity in cart")
    else product not in cart
        detailPage -> localStorage: addToCart(id, quantity)
        localStorage --> detailPage: return()
        detailPage --> actor: display("Added to cart")
    end
    deactivate localStorage
else product out of stock
    detailPage --> actor: disableAddToCartButton()
    detailPage --> actor: display("Out of stock")
end

deactivate detailPage

hide footbox
@enduml
