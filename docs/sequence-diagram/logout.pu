@startuml

' General configuration
skinparam defaultFontSize 20
skinparam maxMessageSize 60
skinparam sequenceMessageAlign center
skinparam actorStyle awesome

' Arrow and border thickness configuration
skinparam {
    ArrowThickness 2
    ParticipantBorderThickness 2
    ActorBorderThickness 2
    LifeLineBorderThickness 2
    ActivationBorderThickness 2
}

' Life line and font style configuration
skinparam LifeLineBorderColor black
skinparam {
    actorFontStyle bold
    boundaryFontStyle bold
    controlFontStyle bold
    entityFontStyle bold
    databaseFontStyle bold
}

' Define components
actor "User" as actor
boundary "HomePage" as homePage
boundary "UserMenu" as menu
control "AuthController" as controller
control "AuthService" as service
control "SecurityUtil" as securityUtil
control "TokenRepository" as blacklistDb
control "UserRepository" as userRepo
database "Database" as userDb

' Start processing flow
activate actor
actor -> menu: clickLogout()
activate menu

menu -> controller: logout(refreshToken)
activate controller

controller -> service: logout(refreshToken)
activate service

' Get current access token
service -> securityUtil: getCurrentUserJWT()
activate securityUtil
securityUtil --> service: return(accessToken)
deactivate securityUtil

' Add token to blacklist
service -> blacklistDb: save(accessToken)
activate blacklistDb
blacklistDb -> userDb: save(accessToken)
activate userDb
userDb --> blacklistDb: return()
deactivate userDb
blacklistDb --> service: return()
deactivate blacklistDb

' Get current user and remove refresh token
service -> securityUtil: getCurrentUserLogin()
activate securityUtil
securityUtil --> service: return(email)
deactivate securityUtil

service -> userRepo: findByEmail(email)
activate userRepo
userRepo -> userDb: findByEmail(email)
activate userDb
userDb --> userRepo: return(user)
deactivate userDb
userRepo --> service: return(user)
deactivate userRepo

service -> userRepo: save(userWithoutRefreshToken)
activate userRepo
userRepo -> userDb: save(userWithoutRefreshToken)
activate userDb
userDb --> userRepo: return()
deactivate userDb
userRepo --> service: return()
deactivate userRepo

service --> controller: return()
deactivate service

controller -> controller: createInvalidCookie()
controller --> menu: return(invalidCookie)
deactivate controller

menu --> homePage: navigate()
deactivate menu
activate homePage
homePage --> actor: display(homePage)
deactivate homePage

hide footbox
@enduml