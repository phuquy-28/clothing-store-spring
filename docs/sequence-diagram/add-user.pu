@startuml

' General configuration
skinparam defaultFontSize 20
skinparam sequenceMessageAlign center

' Actor style configuration
skinparam actorStyle awesome

' Arrow and border thickness configuration
skinparam {
    ArrowThickness 2
    ParticipantBorderThickness 2
    ActorBorderThickness 2
    LifeLineBorderThickness 2
    ActivationBorderThickness 2
}

' Life line color configuration
skinparam LifeLineBorderColor black

' Font style configuration for components
skinparam {
    actorFontStyle bold
    boundaryFontStyle bold
    controlFontStyle bold
    entityFontStyle bold
    databaseFontStyle bold
}

' Define components
actor "Admin" as admin
boundary "UsersPage" as usersPage
boundary "AddUserForm" as addUserForm
control "UserController" as controller
control "UserService" as service
control "UserRepository" as repo
database "Database" as db

' Start processing flow
activate admin

admin -> usersPage: clickAddUser()
activate usersPage

usersPage -> addUserForm: openForm()
activate addUserForm

admin -> addUserForm: inputUserData(name, email, password, role)
admin -> addUserForm: clickSave()

addUserForm -> controller: addUser(userDTO)
activate controller

controller -> service: addUser(userDTO)
activate service

alt valid input
    service -> repo: save(user)
    activate repo
    repo -> db: save(user)
    activate db
    db --> repo: return(savedUser)
    deactivate db
    repo --> service: return(savedUser)
    deactivate repo
    
    service --> controller: return(success)
    controller --> addUserForm: return(success)
    addUserForm --> admin: display("Add user successfully")
    
    addUserForm -> usersPage: refreshUserList()
    usersPage --> admin: display(updatedUserList)
else invalid input
    service --> controller: throwException()
    deactivate service
    controller --> addUserForm: return(error)
    deactivate controller
    addUserForm --> admin: display("Invalid input")
end

deactivate addUserForm
deactivate usersPage


hide footbox
@enduml
